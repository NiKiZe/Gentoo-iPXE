#!ipxe
# How to use:
# * Download undionly.kpxe or ipxe.usb from boot.ipxe.org
# * replace pxelinux.0 with undionly.kpxe, or even better modify dhcp server to point to undionly.kpxe instead
# * set up http server that hosts this and the below files (http is faster then tftp)
# * PXE boot a machine (or use usb image), and you should see iPXE start and a prompt for pressing Ctrl-B - do so
# * type dhcp and press enter to get ip
# * type chain http://server/boot.ipxe (this file) and press enter (this should also be available via http://gateway.ipfs.io/ipfs/QmdTQJhQLQAJbWQdiJXmfBxStkRr7JMfk9S64r57hpfgBV/boot.ipxe)
# For information about how to automate this process, see http://ipxe.org/howto/chainloading and http://ipxe.org/embed for alternatives
# please ask any questions in #ipxe on freenode IRC network

# other files below will be loaded relative to this scripts path

# http://ipxe.org/cmd/initrd
initrd gentoo.igz

# http://ipxe.org/cmd/kernel | remember to add initrd= for efi mode
kernel gentoo root=/dev/ram0 init=/linuxrc  dokeymap looptype=squashfs loop=/image.squashfs  cdroot vga=791

# some magic, download the squashfs image, but have iPXE add CPIO headers so that it is appended to the initramfs above
# this makes it exist in the booted system
# note tho that this will not work in EFI mode (same with the pxeinit patch), where some hacks is needed (for now)

# for that generate with: "echo image.squashfs | cpio -H newc -o > image.squashfs.cpio"
# which also can be used to create a stage2 initrd for offline use
# for pcbios boot the second argument /image.squashfs is where in the initrd it should be placed
initrd image.squashfs /image.squashfs

#replace init, patched version from genkernel
initrd linuxrc /init mode=755

# boot the currently selected image (it was selected by the kernel line)
boot
