#!ipxe
# Related to https://bugs.gentoo.org/396467
# How to use:
# * Download undionly.kpxe or ipxe.usb from boot.ipxe.org
# * replace pxelinux.0 with undionly.kpxe, or even better modify dhcp server to point to undionly.kpxe instead
# * set up http server that hosts this and the below files (http is faster then tftp)
# * PXE boot a machine (or use usb image), and you should see iPXE start and a prompt for pressing Ctrl-B - do so
# * type dhcp and press enter to get ip
# * type chain http://server/boot.ipxe (this file) and press enter
# For information about how to automate this process, see http://ipxe.org/howto/chainloading and http://ipxe.org/embed for alternatives
# please use discussions on https://github.com/NiKiZe/Gentoo-iPXE for questions

# dnsmasq.conf example
# dhcp-match=IPXEBOOT,175
# dhcp-option=175,8:1:1
# dhcp-boot=net:#IPXEBOOT,undionly.kpxe
# dhcp-boot=net:IPXEBOOT,http://b800.org/gentoo/boot.ipxe

# other files below will be loaded relative to this scripts path

# http://ipxe.org/cmd/initrd
initrd gentoo.igz

# http://ipxe.org/cmd/kernel
# cmdline initrd= is needed in efi mode and uses https://github.com/ipxe/ipxe/commit/e5f02551735922eb235388bff08249a6f31ded3d
# iPXE version before that commit should have initrd=gentoo.igz initrd=image.squashfs.cpio instead, also see below
kernel gentoo root=/dev/ram0 init=/linuxrc  dokeymap looptype=squashfs loop=/image.squashfs  cdroot vga=791 initrd=initrd.magic

# Download the squashfs image, but have iPXE add CPIO header so that it is appended to the initramfs above
# this makes it exist in the booted system
# the second argument /image.squashfs is name of file inside cpio
initrd image.squashfs /image.squashfs

# For EFI this is needed: https://github.com/ipxe/ipxe/commit/e5f02551735922eb235388bff08249a6f31ded3d
# workaround with old iPXE version: "echo image.squashfs | cpio -H newc -o > image.squashfs.cpio"
# which also can be used to create a stage2 initrd for offline use

# boot the currently selected image (it was selected by the kernel line)
boot
